import React from 'react'
import Head from 'next/head'
import axios from 'axios'
// 这里必须用花括号包裹 不是默认暴露
import { marked } from 'marked'
import hljs from 'highlight.js'
import 'highlight.js/styles/monokai-sublime.css'
// tsx这种扩展名不能省略 只有js扩展名可以省略
import Tocify from '../components/tocify.tsx'
import 'markdown-navbar/dist/navbar.css'
import { Row, Col, Breadcrumb, Affix} from 'antd'
import '../node_modules/antd/dist/antd.css'
import { CalendarOutlined, FolderOpenOutlined, FireOutlined, ThunderboltTwoTone } from '@ant-design/icons'
import Header from '../components/Header/index.js'
import Author from '../components/Author'
import Advert from '../components/Advert'
import Footer from '../components/Footer'
import servicePath from '../config/apiURL'



export default function Detailed(props) {
  const tocify = new Tocify()
  const renderer = new marked.Renderer()
  // 自定义渲染模式 上述renderer不带锚链接 即不带a标签 所以需要自定义一个
  renderer.heading = function (text, level, raw)
  {
    const anchor = tocify.add(text, level)
    return `<a id="${anchor}" href="${anchor}" class="anchor-fix"><h${level}>${text}</h${level}></a>\n`
  }

  /* 配置如何解析markdown */
  /* gfm启动类似github样式的markdown 
     pedantic启动markdown容错 当出现错误时纠正并渲染
     sanitize原始输出忽略html标签 防止插入视频时 无法输出的问题
     tables 支持Github形式的表格 必须打开gfm选项
     breaks是否支持github的换行符
  */
  marked.setOptions({
    renderer: renderer,
    gfm: true,
    pedantic: false,
    sanitize: false,
    tables: true,
    breaks: false,
    smartlists: true,
    highLight: function (code) {
      return hljs.highlightAuto(code).value
    }
  })
  let html = marked(props.content)

  return (
    <div>
      <Head>
        <title>Detailed</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      <Row className='comm-main' type='flex' justify='center'>
        <Col className='comm-left' xs={24} sm={24} md={16} lg={18} xl={14}>
          <div>
            <div className='bread-div'>
              <Breadcrumb>
                <Breadcrumb.Item>
                  <a href='/'>首页</a>
                </Breadcrumb.Item>
                <Breadcrumb.Item>
                  视频列表
                </Breadcrumb.Item>
                <Breadcrumb.Item>
                  xxxx
                </Breadcrumb.Item>
              </Breadcrumb>
            </div>
            <div>  
              <div className='detailed-title'>
                文章标题
              </div>
              <div className='list-icon center'>
                <span>< CalendarOutlined />&nbsp;2021-10-22</span>
                <span>< FolderOpenOutlined />&nbsp;视频教程</span>
                <span>< FireOutlined/>&nbsp;500人</span>
              </div>
              <div className='detailed-content'
                dangerouslySetInnerHTML={{__html: html}}></div>
            </div>
          </div>
        </Col>
        <Col className='comm-right' xs={0} sm={0} md={7} lg={5} xl={4}>
          <Author />
          <Advert />
          <Affix offsetTop={5}> 
          <div className='detailed-nav comm-box'>
            <div className='nav-title'>文章目录</div>
              { tocify && tocify.render()}
          </div>
          </Affix>
        </Col>
      </Row>
    <Footer />
    </div>
  )
}

Detailed.getInitialProps = async (context) => {
  let id = context.query.id;
  const promise = new Promise((resolve) => {
    axios(servicePath.getArticleById + id).then(
      (res) => {
        resolve(res.data.data[0]);
        
      }
    )
  })
  return await promise;
}